.TH cp_hashlist 3 "OCTOBER 2005" libcprops.0.0.3 "libcprops - cp_hashlist"
.SH NAME
cp_hashlist_lock, cp_hashlist_unlock, 
cp_hashlist_rd_lock, cp_hashlist_wrlock \- hashlist locking functions
.SH SYNOPSIS

.B #include <cprops/hashlist.h>

.BI "int cp_hashlist_lock(cp_hashlist *" list ", int " type ");
.br
.BI "int cp_hashlist_unlock(cp_hashlist *" list ");
.br
.BI "int cp_hashlist_rdlock(cp_hashlist *" list ");
.br
.BI "int cp_hashlist_wrlock(cp_hashlist *" list ");
.SH DESCRIPTION
\fBcp_hashlist_lock\fP attempts a lock of the type given in \fItype\fP. 
Possible lock types are \fBCOLLECTION_LOCK_READ\fP, which allows other threads
to read concurrently, \fBCOLLECTION_LOCK_WRITE\fP, which grants exclusive 
access or \fBCOLLECTION_LOCK_NONE\fP which has no effect. Unless 
COLLECTION_MODE_NOSYNC is set, single list operations are synchronized and do
not require explicit locking. Explicit locking is required for transaction-like
operations where several list operations must complete as a group before 
allowing other threads to access the list. Once a thread has obtained the list 
lock, subsequent list operations on this thread will not attempt to perform 
additional locking, but will attempt locking on other threads. The application 
is responsible for performing the correct type of locking - if any changes may 
be made to list content, the list must be locked for writing; Otherwise it may 
be locked for reading. 

.B cp_hashlist_unlock
releases a lock previously acquired with \fBcp_hashlist_lock\fP.
.SH
.B cp_hashlist_rdlock
and
.B cp_hashlist_wrlock
are the same as calling 
.B cp_hashlist_lock
with 
.B COLLECTION_LOCK_READ
and
.B COLLECTION_LOCK_WRITE
respectively.
.SH RETURN VALUE
locking functions return 0 on success or a non-zero error code on failure.
.SH ERRORS
.TP
.B EINVAL
the 
.I list 
was instantiated with 
.B COLLECTION_MODE_NOSYNC
or an invalid lock \fItype\fP code was given.
.P
.br
Other error codes may be returned from the underlying synchronization api.
.SH "SEE ALSO"
.BR pthread_rwlock_rdlock (3),
.BR pthread_rwlock_wrlock (3),
.BR cp_hashlist (3)
